filename,test_name,test_id,issue_severity,issue_confidence,issue_cwe,issue_text,line_number,col_offset,end_col_offset,line_range,more_info
repo_files\vulnerabilities\command_injection.py,blacklist,B404,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,Consider possible security implications associated with the subprocess module.,1,0,17,[1],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_imports.html#b404-import-subprocess
repo_files\vulnerabilities\command_injection.py,start_process_with_partial_path,B607,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,Starting a process with a partial executable path,4,0,36,[4],https://bandit.readthedocs.io/en/1.7.8/plugins/b607_start_process_with_partial_path.html
repo_files\vulnerabilities\command_injection.py,subprocess_popen_with_shell_equals_true,B602,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,"subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",4,0,36,[4],https://bandit.readthedocs.io/en/1.7.8/plugins/b602_subprocess_popen_with_shell_equals_true.html
repo_files\vulnerabilities\command_injection.py,start_process_with_partial_path,B607,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,Starting a process with a partial executable path,7,0,29,[7],https://bandit.readthedocs.io/en/1.7.8/plugins/b607_start_process_with_partial_path.html
repo_files\vulnerabilities\command_injection.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,subprocess call - check for execution of untrusted input.,7,0,29,[7],https://bandit.readthedocs.io/en/1.7.8/plugins/b603_subprocess_without_shell_equals_true.html
repo_files\vulnerabilities\eval_usage.py,blacklist,B307,MEDIUM,HIGH,https://cwe.mitre.org/data/definitions/78.html,Use of possibly insecure function - consider using safer ast.literal_eval.,4,4,14,[4],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_calls.html#b307-eval
repo_files\vulnerabilities\insecure_deserialization.py,blacklist,B403,LOW,HIGH,https://cwe.mitre.org/data/definitions/502.html,Consider possible security implications associated with pickle module.,1,0,13,[1],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_imports.html#b403-import-pickle
repo_files\vulnerabilities\insecure_deserialization.py,blacklist,B301,MEDIUM,HIGH,https://cwe.mitre.org/data/definitions/502.html,"Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",7,15,33,[7],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_calls.html#b301-pickle
repo_files\vulnerabilities\insecure_hash.py,hashlib,B324,HIGH,HIGH,https://cwe.mitre.org/data/definitions/327.html,Use of weak MD5 hash for security. Consider usedforsecurity=False,6,11,43,[6],https://bandit.readthedocs.io/en/1.7.8/plugins/b324_hashlib.html
repo_files\vulnerabilities\insecure_hash.py,hashlib,B324,HIGH,HIGH,https://cwe.mitre.org/data/definitions/327.html,Use of weak SHA1 hash for security. Consider usedforsecurity=False,11,11,44,[11],https://bandit.readthedocs.io/en/1.7.8/plugins/b324_hashlib.html
repo_files\vulnerabilities\insecure_hash.py,hashlib,B324,HIGH,HIGH,https://cwe.mitre.org/data/definitions/327.html,Use of weak MD5 hash for security. Consider usedforsecurity=False,16,11,43,[16],https://bandit.readthedocs.io/en/1.7.8/plugins/b324_hashlib.html
repo_files\vulnerabilities\insecure_randomness.py,blacklist,B311,LOW,HIGH,https://cwe.mitre.org/data/definitions/330.html,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,6,7,22,[6],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_calls.html#b311-random
repo_files\vulnerabilities\insecure_randomness.py,blacklist,B311,LOW,HIGH,https://cwe.mitre.org/data/definitions/330.html,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,7,15,45,[7],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_calls.html#b311-random
repo_files\vulnerabilities\vulnerable_code_sql_injection.py,hardcoded_sql_expressions,B608,MEDIUM,LOW,https://cwe.mitre.org/data/definitions/89.html,Possible SQL injection vector through string-based query construction.,8,14,45,[8],https://bandit.readthedocs.io/en/1.7.8/plugins/b608_hardcoded_sql_expressions.html
